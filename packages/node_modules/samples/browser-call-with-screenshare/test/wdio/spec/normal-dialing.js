import testUsers from '@webex/test-helper-test-users';
import {expect} from 'chai';

describe('samples', () => {
  describe('browser-call-with-screenshare', () => {
    describe('normal dialing', () => {
      let mccoy, spock;

      const browserSpock = browser.select('browserSpock');
      const browserMccoy = browser.select('browserMccoy');

      before('create test users', () => testUsers.create({count: 2})
        .then((users) => {
          [spock, mccoy] = users;
        }));

      before('reload browser', () => {
        browser.refresh();
      });

      it('loads the app', () => {
        browser.url('/browser-call-with-screenshare');
        browser.waitForExist('#access-token', 1500);
      });

      it('connects mccoy\'s browser', () => {
        expect(browserMccoy.getTitle()).to.equal('Sample: Local Screensharing');
        browserMccoy.setValue('#access-token', mccoy.token.access_token);
        browserMccoy.click('#connect');
        browserMccoy.waitForExist('.listening');
      });

      it('connects spock\'s browser', () => {
        expect(browserSpock.getTitle()).to.equal('Sample: Local Screensharing');
        browserSpock.setValue('#access-token', spock.token.access_token);
        browserSpock.click('#connect');
        browserSpock.waitForExist('.listening');
      });

      it('places call from spock to mccoy', () => {
        browserSpock.setValue('#invitee', mccoy.emailAddress);
        browserSpock.click('[title="dial"]');

        browserMccoy.pause(2500);
        browserMccoy.alertAccept();
      });

      it('starts screensharing', () => {
        browser.pause(2500);
        browserSpock.click('button[title="share screen"]');

        browserSpock.waitUntil(() => (browserSpock.getText('#screenshare-tracks') === '1'), 10000, 'Timed-out waiting for screenshare tracks to chage');
      });

      it('stops screensharing', () => {
        browser.pause(2500);
        browserSpock.click('button[title="stop screen share"]');
        browserSpock.waitUntil(() => (browserSpock.getText('#screenshare-tracks') === '0'), 10000, 'Timed-out waiting for screenshare tracks to chage');
      });

      it('ends the call', () => {
        browser.pause(2500);
        browserMccoy.click('[title="hangup"]');
      });
    });
  });
});
