import {assert} from 'chai';

describe(`sample-browser-single-party-call`, () => {
  describe(`saved values`, () => {
    it(`stores form values across page loads`, () => {
      browser.select(`browserSpock`).url(`/packages/node_modules/sample-browser-single-party-call?usefakemedia`);
      browser.select(`browserSpock`).waitUntil(() => !browser.select(`browserSpock`).getTitle().match(/localhost/));
      assert.equal(browser.select(`browserSpock`).getTitle(), `Sample: Single Party Calling`);

      browser.select(`browserSpock`).setValue(`#access-token`, 1);
      browser.select(`browserSpock`).setValue(`#invitee`, 2);

      // need to deselect the #invitee input to fire the change event
      browser.select(`browserSpock`).click(`body`);

      browser.select(`browserSpock`).url(`/packages/node_modules/sample-browser-single-party-call?usefakemedia`);

      browser.select(`browserSpock`).waitUntil(() => !browser.select(`browserSpock`).getTitle().match(/localhost/));
      assert.equal(browser.select(`browserSpock`).getTitle(), `Sample: Single Party Calling`);

      browser.select(`browserSpock`).waitUntil(() => browser.select(`browserSpock`).getTitle() === `Sample: Single Party Calling`);

      assert.equal(browser.select(`browserSpock`).getValue(`#access-token`), 1);
      assert.equal(browser.select(`browserSpock`).getValue(`#invitee`), 2);
    });
  });
});
