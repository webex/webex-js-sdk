import {expectEvent} from '@ciscospark/test-helper-mocha';

export function expectCallIncomingEvent(ctx, msg) {
  return expectEvent(10000, `call:incoming`, ctx, msg);
}

export function expectChangeActiveParticipantsCountEvent(ctx, msg) {
  return expectEvent(10000, `change:activeParticipantsCount`, ctx, msg);
}

export function expectChangeLocusEvent(ctx, msg) {
  return expectEvent(10000, `change:locus`, ctx, msg);
}

export function expectChangeStateEvent(ctx, msg) {
  return expectEvent(10000, `change:state`, ctx, msg);
}

export function expectConnectedEvent(ctx, msg) {
  return expectEvent(10000, `connected`, ctx, msg);
}

export function expectDisconnectedEvent(ctx, msg) {
  return expectEvent(10000, `disconnected`, ctx, msg);
}

export function expectErrorEvent(ctx, msg) {
  return expectEvent(10000, `error`, ctx, msg);
}

export function expectInactiveEvent(ctx, msg) {
  return expectEvent(10000, `inactive`, ctx, msg);
}

export function expectMembershipChangeEvent(ctx, msg) {
  return expectEvent(10000, `membership:change`, ctx, msg);
}

export function expectMembershipConnectedEvent(ctx, msg) {
  return expectEvent(10000, `membership:connected`, ctx, msg);
}

export function expectMembershipDeclinedEvent(ctx, msg) {
  return expectEvent(10000, `membership:declined`, ctx, msg);
}

export function expectMembershipDisconnectedEvent(ctx, msg) {
  return expectEvent(10000, `membership:disconnected`, ctx, msg);
}

export function expectRemoteAudioMutedChangeEvent(ctx, msg) {
  return expectEvent(10000, `remoteAudioMuted:change`, ctx, msg);
}

export function expectRemoteVideoMutedChangeEvent(ctx, msg) {
  return expectEvent(10000, `remoteVideoMuted:change`, ctx, msg);
}

export function expectRingingEvent(ctx, msg) {
  return expectEvent(10000, `ringing`, ctx, msg);
}
