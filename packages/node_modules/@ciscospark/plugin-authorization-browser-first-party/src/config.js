/*!
 * Copyright (c) 2015-2017 Cisco Systems, Inc. See LICENSE file.
 */

export default {
  credentials: {
    /**
     * Controls whether {@link Authorization#initiateLogin()} requests a token
     * or an auth code. Anything other than 'confidential' will be treated as
     * 'public'
     * @type {string}
     */
    clientType: `public`,

    refreshCallback(spark, token) {
      /* eslint-disable camelcase */
      return spark.request({
        method: `POST`,
        uri: token.config.tokenUrl,
        form: {
          grant_type: `refresh_token`,
          redirect_uri: token.config.redirect_uri,
          refresh_token: token.refresh_token
        },
        auth: {
          user: token.config.client_id,
          pass: token.config.client_secret,
          sendImmediately: true
        },
        shouldRefreshAccessToken: false
      })
        .then((res) => res.body);
      /* eslint-enable camelcase */
    }
  }
};
