/*!
 * Copyright (c) 2015-2017 Cisco Systems, Inc. See LICENSE file.
 */

'use strict';

module.exports = {
  extends: './es2015.js',
  parser: 'babel-eslint',
  plugins: [
    'import'
  ],
  rules: {
    //
  // Import Plugin
  // https://www.npmjs.com/package/eslint-plugin-import
  //

  //
  // Import Plugin/Static analysis
  //
    'import/no-unresolved': [
      'error'
    ],
    'import/named': [
      'error'
    ],
    'import/default': [
      'error'
    ],
    'import/namespace': [
      'error'
    ],
    'import/no-restricted-paths': [
      'off'
    ],
    'import/no-absolute-path': [
      'error'
    ],
    'import/no-dynamic-require': [
      'off'
    ],
    // I feel like no-internal-modules is a best practice, but it's a bit of work
    // for us to adhere to it right now.
    'import/no-internal-modules': [
      'off'
    ],
    'import/no-webpack-loader-syntax': [
      'error'
    ],
    //
    // Import Plugin/Helpful warnings
    //
    'import/export': [
      'error'
    ],
    'import/no-named-as-default': [
      'error'
    ],
    'import/no-named-as-default-member': [
      'error'
    ],
    'import/no-deprecated': [
      'error'
    ],
    'import/no-extraneous-dependencies': [
      // Ideally, we'd turn this on, but it doesn't pick up sibling dependencies
      // in monorepos as being available
      'off'
    ],
    'import/no-mutable-exports': [
      'error'
    ],
    //
    // Import Plugin/Module systems
    //
    'import/unambiguous': [
      'off'
    ],
    'import/no-commonjs': [
      // There are too many places where we still need commonjs for toolign and
      // whatnot for this to be reasonable enforced without overriding
      // everywhere
      'off'
    ],
    'import/no-amd': [
      'error'
    ],
    'import/no-nodejs-modules': [
      'off'
    ],
    //
    // Import Plugin/Style guide
    //
    'import/first': [
      'error'
    ],
    'import/no-duplicates': [
      'error'
    ],
    'import/no-namespace': [
      'error'
    ],
    'import/extensions': [
      'error'
    ],
    'import/order': [
      'off'
    ],
    'import/newline-after-import': [
      'error'
    ],
    'import/prefer-default-export': [
      'error'
    ],
    'import/max-dependencies': [
      'off'
    ],
    // no-unassigned-import seems like the 'right' way to do things, but would
    // actually break the plugin system
    'import/no-unassigned-import': [
      'off'
    ],
    'import/no-named-default': [
      'error'
    ]
  }
};
