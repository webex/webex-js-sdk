/*!
 * Copyright (c) 2015-2017 Cisco Systems, Inc. See LICENSE file.
 */

'use strict';

module.exports = {
  env: {
    node: true
  },
  globals: {
    Promise: false
  },
  parserOptions: {
    ecmaVersion: 5,
    sourceType: 'script',
    ecmaFeatures: {
      globalReturn: false
    }
  },
  rules: {
    //
    // Possible Errors
    // http://eslint.org/docs/rules///possible-errors
    //
    'comma-dangle': [
      2,
      'never'
    ],
    'no-cond-assign': [
      2,
      'always'
    ],
    'no-console': [
      2
    ],
    'no-constant-condition': [
      2
    ],
    'no-control-regex': [
      2
    ],
    'no-debugger': [
      2
    ],
    'no-dupe-args': [
      2
    ],
    'no-dupe-keys': [
      2
    ],
    'no-duplicate-case': [
      2
    ],
    'no-empty': [
      2
    ],
    'no-empty-character-class': [
      2
    ],
    'no-ex-assign': [
      2
    ],
    'no-extra-boolean-cast': [
      2
    ],
    'no-extra-parens': [
      2,
      'all'
    ],
    'no-extra-semi': [
      2
    ],
    'no-func-assign': [
      2
    ],
    'no-inner-declarations': [
      2
    ],
    'no-invalid-regexp': [
      2
    ],
    'no-irregular-whitespace': [
      2
    ],
    'no-negated-in-lhs': [
      2
    ],
    'no-obj-calls': [
      2
    ],
    'no-regex-spaces': [
      2
    ],
    'no-sparse-arrays': [
      2
    ],
    'no-unexpected-multiline': [
      2
    ],
    'no-unreachable': [
      2
    ],
    'use-isnan': [
      2
    ],
    'valid-jsdoc': [
      2,
      {
        prefer: {
          arg: 'param',
          argument: 'param',
          return: 'returns',
          virtual: 'abstract',
          fires: 'emits'
        },
        requireParamDescription: false,
        requireReturn: true,
        requireReturnType: true,
        requireReturnDescription: false
      }
    ],
    'valid-typeof': [
      2
    ],
    //
    // Best Practices
    // http://eslint.org/docs/rules///best-practices
    //
    'accessor-pairs': [
      2,
      {
        setWithoutGet: true,
        getWithoutSet: false
      }
    ],
    'array-callback-return': [
      2
    ],
    'block-scoped-var': [
      2
    ],
    complexity: [
      2,
      7
    ],
    'consistent-return': [
      2
    ],
    curly: [
      2,
      'all'
    ],
    'default-case': [
      2
    ],
    'dot-location': [
      2,
      'property'
    ],
    'dot-notation': [
      2,
      {
        allowKeywords: true
      }
    ],
    eqeqeq: [
      2
    ],
    'guard-for-in': [
      2
    ],
    'no-alert': [
      2
    ],
    'no-caller': [
      2
    ],
    'no-case-declarations': [
      2
    ],
    'no-div-regex': [
      2
    ],
    'no-else-return': [
      2
    ],
    'no-empty-function': [
      2
    ],
    'no-empty-pattern': [
      2
    ],
    'no-eq-null': [
      2
    ],
    'no-eval': [
      2
    ],
    'no-extend-native': [
      2
    ],
    'no-extra-bind': [
      2
    ],
    'no-extra-label': [
      2
    ],
    'no-fallthrough': [
      2
    ],
    'no-floating-decimal': [
      2
    ],
    'no-implicit-coercion': [
      2,
      {
        boolean: true,
        number: true,
        string: true,
        allow: [
          '!!'
        ]
      }
    ],
    'no-implicit-globals': [
      2
    ],
    'no-implied-eval': [
      2
    ],
    'no-invalid-this': [
      2
    ],
    'no-iterator': [
      2
    ],
    'no-labels': [
      2
    ],
    'no-lone-blocks': [
      2
    ],
    'no-loop-func': [
      2
    ],
    'no-magic-numbers': [
      0
    ],
    'no-multi-spaces': [
      2
    ],
    'no-multi-str': [
      2
    ],
    'no-native-reassign': [
      2
    ],
    'no-new': [
      2
    ],
    'no-new-func': [
      2
    ],
    'no-new-wrappers': [
      2
    ],
    'no-octal': [
      2
    ],
    'no-octal-escape': [
      2
    ],
    'no-param-reassign': [
      // ideally, this would be a warning, but Jenkins and XUnit
      0,
      {
        props: true
      }
    ],
    'no-process-env': [
      0
    ],
    'no-proto': [
      2
    ],
    'no-redeclare': [
      2,
      {
        builtinGlobals: true
      }
    ],
    'no-return-assign': [
      2,
      'always'
    ],
    'no-script-url': [
      2
    ],
    'no-self-assign': [
      2
    ],
    'no-self-compare': [
      2
    ],
    'no-sequences': [
      2
    ],
    'no-throw-literal': [
      2
    ],
    'no-unmodified-loop-condition': [
      2
    ],
    'no-unused-expressions': [
      2
    ],
    'no-unused-labels': [
      2
    ],
    'no-useless-call': [
      2
    ],
    'no-useless-concat': [
      2
    ],
    'no-void': [
      2
    ],
    'no-warning-comments': [
      1
    ],
    'no-with': [
      2
    ],
    radix: [
      2
    ],
    'vars-on-top': [
      0
    ],
    'wrap-iife': [
      2
    ],
    yoda: [
      2,
      'never'
    ],
    //
    // Strict Mode
    // http://eslint.org/docs/rules///strict-mode
    //
    strict: [
      2,
      'global'
    ],
    //
    // Variables
    // http://eslint.org/docs/rules///variables
    //
    'init-declarations': [
      0
    ],
    'no-catch-shadow': [
      2
    ],
    'no-delete-var': [
      2
    ],
    'no-label-var': [
      2
    ],
    'no-shadow': [
      2
    ],
    'no-shadow-restricted-names': [
      2
    ],
    'no-undef': [
      2
    ],
    'no-undef-init': [
      2
    ],
    'no-undefined': [
      0
    ],
    'no-unused-vars': [
      2
    ],
    'no-use-before-define': [
      2,
      {
        classes: true,
        functions: false
      }
    ],
    //
    // Node.js and CommonJS
    // http://eslint.org/docs/rules///nodejs-and-commonjs
    //
    'callback-return': [
      2
    ],
    'global-require': [
      2
    ],
    'handle-callback-err': [
      2
    ],
    'no-mixed-requires': [
      0
    ],
    'no-new-require': [
      2
    ],
    'no-path-concat': [
      2
    ],
    'no-process-exit': [
      2
    ],
    'no-restricted-imports': [
      0
    ],
    'no-restricted-modules': [
      0
    ],
    'no-sync': [
      2
    ],
    //
    // Stylistic Issues
    // http://eslint.org/docs/rules///stylistic-issues
    //
    'array-bracket-spacing': [
      2,
      'never'
    ],
    'block-spacing': [
      2,
      'never'
    ],
    'brace-style': [
      2,
      'stroustrup',
      {
        allowSingleLine: true
      }
    ],
    camelcase: [
      2
    ],
    'comma-spacing': [
      2,
      {
        before: false,
        after: true
      }
    ],
    'comma-style': [
      2,
      'last'
    ],
    'computed-property-spacing': [
      2,
      'never'
    ],
    'consistent-this': [
      2,
      'self'
    ],
    'eol-last': [
      2
    ],
    'func-names': [
      2
    ],
    'func-style': [
      2,
      'declaration'
    ],
    'id-blacklist': [
      0
    ],
    'id-length': [
      0
    ],
    'id-match': [
      0
    ],
    indent: [
      2,
      2,
      {
        SwitchCase: 1,
        MemberExpression: 1
      }
    ],
    'jsx-quotes': [
      2,
      'prefer-double'
    ],
    'key-spacing': [
      2,
      {
        beforeColon: false,
        afterColon: true
      }
    ],
    'keyword-spacing': [
      2
    ],
    'linebreak-style': [
      2
    ],
    'lines-around-comment': [
      0
    ],
    'max-depth': [
      2,
      5
    ],
    'max-len': [
      0
    ],
    'max-nested-callbacks': [
      2,
      2
    ],
    'max-params': [
      2,
      4
    ],
    'max-statements': [
      2,
      30
    ],
    'new-cap': [
      2,
      {
        newIsCap: true,
        capIsNew: true,
        capIsNewExceptions: [
          'S'
        ]
      }
    ],
    'new-parens': [
      2
    ],
    'newline-after-var': [
      0
    ],
    'newline-per-chained-call': [
      // Generally, I'm in favor of this, but it does make a lot of code look
      // weird. Let's hold off enabling it until there's a way to only enable it
      // on chains with at least two function calls
      0
    ],
    'no-array-constructor': [
      2
    ],
    'no-bitwise': [
      2
    ],
    'no-continue': [
      2
    ],
    'no-inline-comments': [
      2
    ],
    'no-lonely-if': [
      2
    ],
    'no-mixed-spaces-and-tabs': [
      2
    ],
    'no-multiple-empty-lines': [
      2,
      {
        max: 2
      }
    ],
    'no-negated-condition': [
      2
    ],
    'no-nested-ternary': [
      2
    ],
    'no-new-object': [
      2
    ],
    'no-plusplus': [
      2,
      {
        allowForLoopAfterthoughts: true
      }
    ],
    'no-restricted-syntax': [
      0
    ],
    'no-spaced-func': [
      2
    ],
    'no-ternary': [
      0
    ],
    'no-trailing-spaces': [
      2
    ],
    'no-underscore-dangle': [
      0
    ],
    'no-unneeded-ternary': [
      2
    ],
    'no-whitespace-before-property': [
      2
    ],
    'object-curly-spacing': [
      2,
      'never'
    ],
    'one-var': [
      0
    ],
    'one-var-declaration-per-line': [
      0
    ],
    'operator-assignment': [
      0
    ],
    'operator-linebreak': [
      2,
      'none'
    ],
    'padded-blocks': [
      0
    ],
    'quote-props': [
      2,
      'as-needed'
    ],
    quotes: [
      2,
      'single'
    ],
    'require-jsdoc': [
      2,
      {
        require: {
          FunctionDeclaration: false,
          MethodDefinition: true,
          ClassDeclaration: true
        }
      }
    ],
    semi: [
      2,
      'always'
    ],
    'semi-spacing': [
      2,
      {
        before: false,
        after: true
      }
    ],
    'sort-imports': [
      // disabled in favor of eslint-plugin-import
      0
    ],
    'sort-vars': [
      2
    ],
    'space-before-blocks': [
      2,
      'always'
    ],
    'space-before-function-paren': [
      2,
      'never'
    ],
    'space-in-parens': [
      2,
      'never'
    ],
    'space-infix-ops': [
      2
    ],
    'space-unary-ops': [
      2
    ],
    'spaced-comment': [
      2,
      'always',
      {
        exceptions: [
          '!'
        ],
        markers: [
          '**',
          '**!'
        ]
      }
    ],
    'wrap-regex': [
      0
    ]
  }
};
