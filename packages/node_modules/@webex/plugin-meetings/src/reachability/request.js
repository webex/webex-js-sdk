import {StatelessWebexPlugin} from '@webex/webex-core';

import LoggerProxy from '../common/logs/logger-proxy';
import {
  HTTP_VERBS,
  RESOURCE,
  API
} from '../constants';

/**
 * @class RechabilityRequest
 */
class RechabilityRequest extends StatelessWebexPlugin {
  /**
   * gets the cluster information
   * @returns {Promise}
   */
getClusters = () => this.request({
  method: HTTP_VERBS.GET,
  shouldRefreshAccessToken: false,
  api: API.CALLIOPEDISCOVERY,
  resource: RESOURCE.CLUSTERS
})
  .then((res) => {
    const {clusters} = res.body;

    LoggerProxy.logger.info(`Reachability:request#getClusters --> get clusters successful:${JSON.stringify(clusters)}`);

    return clusters;
  });

/**
   * gets remote SDP For Clusters
   * @param {Object} localSDPList localSDPs for the cluster
   * @returns {Object}
   */
remoteSDPForClusters = (localSDPList) => this.request({
  method: HTTP_VERBS.POST,
  shouldRefreshAccessToken: false,
  api: API.CALLIOPEDISCOVERY,
  resource: RESOURCE.REACHABILITY,
  body: {offers: localSDPList}
})
  .then((res) => {
    LoggerProxy.logger.info('Reachability:request#remoteSDPForClusters --> Remote SDPs got succcessfully');

    return res.body;
  });
}

export default RechabilityRequest;
