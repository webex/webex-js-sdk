/*!
 * Copyright (c) 2015-2018 Cisco Systems, Inc. See LICENSE file.
 */

/* eslint-disable require-jsdoc */

import {SparkPlugin} from '@ciscospark/spark-core';
import {find} from 'lodash';

import {SIP_URI, MEETINGS} from '../constants';

import MeetingInfoRequest from './request';

const MeetingInfo = SparkPlugin.extend({
  namespace: MEETINGS,
  meetingInfoList: {},
  children: {
    meetingInfoRequest: MeetingInfoRequest
  },
  /**
   * @param {string} id
   * @returns {object}
   * @memberof MeetingInfo
   */
  getMeetingInfo(id) {
    if (this.meetingInfoList[id]) {
      return this.meetingInfoList[id];
    }

    return find(
      this.meetingInfoList,
      (info) => info.sipUrl === id || info.locusId === id || info.userId === id || info.meetingLink === id
    );
  },

  /**
   * @param {string} id
   * @param {object} info
   * @returns {null}
   * @memberof MeetingInfo
   */
  setMeetingInfo(id, info) {
    const meetingInfo = this.getMeetingInfo(id);
    if (meetingInfo) {
      this.meetingInfoList[meetingInfo.id] = info;
    }
    else {
      this.meetingInfoList[id] = info;
      this.meetingInfoList[id].id = id;
    }
  },

  fetchMeetingInfo(destination) {
    const options = {
      value: destination,
      type: SIP_URI
    };

    return this.meetingInfoRequest.fetchMeetingInfo(options);
  }
});

export default MeetingInfo;
